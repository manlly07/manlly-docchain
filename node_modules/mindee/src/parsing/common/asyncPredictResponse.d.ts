import { ApiResponse } from "./apiResponse";
import { StringDict } from "./stringDict";
import { Inference } from "./inference";
import { Document } from "./document";
export declare class Job {
    issuedAt: Date;
    availableAt?: Date;
    id: string;
    status?: "waiting" | "processing" | "completed";
    /**
     * The time taken to process the job, in milliseconds.
     */
    milliSecsTaken?: number;
    constructor(jsonResponse: StringDict);
    protected datetimeWithTimezone(date: string): Date;
}
export declare class AsyncPredictResponse<T extends Inference> extends ApiResponse {
    job: Job;
    document?: Document<T>;
    constructor(inferenceClass: new (httpResponse: StringDict) => T, httpResponse: StringDict);
}
